auth:
  enabled: true
  global: false
  claims:
    role: http://schemas.microsoft.com/ws/2008/06/identity/claims/role

http:
  retries: 2
  interval: 2.0
  exponential: true
  
useErrorHandler: true
useForwardedHeaders: true
passQueryString: true
forwardRequestHeaders: true
forwardResponseHeaders: true
generateRequestId: true
generateTraceId: true
useLocalUrl: false
loadBalancer:
  enabled: false
  url: fabio:9999

extensions:
  customErrors:
    includeExceptionMessage: true

  cors:
    allowCredentials: true
    allowedOrigins:
      - '*'
    allowedMethods:
      - post
      - put
      - delete
    allowedHeaders:
      - '*'
    exposedHeaders:
      - Request-ID
      - Resource-ID
      - Trace-ID
      - Total-Count

  jwt:
    issuerSigningKey: eiquief5phee9pazo0Faegaez9gohThailiur5woy2befiech1oarai4aiLi6ahVecah3ie9Aiz6Peij
    validIssuer: organisation
    validateAudience: false
    validateIssuer: true
    validateLifetime: true

  swagger:
    name: Thesis
    reDocEnabled: false
    title: Thesis API
    version: v1
    routePrefix: docs
    includeSecurity: true

  tracing:
    serviceName: api-gateway
    udpHost: jaeger
    udpPort: 6831
    maxPacketSize: 0
    sampler: const
    useEmptyTracer: false

modules:
  home:
    routes:
      - upstream: /
        method: GET
        use: return_value
        returnValue: Welcome to Thesis API!
        
  users:
    path: /users
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: users-service/users
        auth: true
        claims:
          role: admin
    
      - upstream: /me
        method: GET
        use: downstream
        downstream: users-service/users/@user_id
        auth: true
    
      - upstream: /{userId}
        method: GET
        use: downstream
        downstream: users-service/users/{userId}
        auth: false
    
      - upstream: /{userId}/state
        method: GET
        use: downstream
        downstream: users-service/users/{userId}/state
        auth: true
        claims:
          role: admin
    
      - upstream: /
        method: POST
        use: downstream
        downstream: users-service/users
        bind:
          - userId:@user_id
        auth: true
        payload: create_user
        schema: create_user.schema
        
      - upstream: /{userId}/state/{state}
        method: PUT
        use: downstream
        downstream: users-service/users/{userId}/state/{state}
        bind:
          - userId:{userId}
          - state:{state}
        auth: true
        claims:
          role: admin
          
      - upstream: /{userId}/lock
        method: PUT
        use: downstream
        downstream: users-service/users/{userId}/lock
        bind:
          - userId:{userId}
        auth: true

    services:
      users-service:
        localUrl: localhost:5012
        url: users-service
      
  identity:
    path: /identity
    routes:
      - upstream: /users/{userId}
        method: GET
        use: downstream
        downstream: identity-service/users/{userId}
        auth: true
        claims:
          role: admin
    
      - upstream: /me
        method: GET
        use: downstream
        downstream: identity-service/me
        auth: true
    
      - upstream: /sign-up
        method: POST
        use: downstream
        downstream: identity-service/sign-up
        auth: false
        resourceId:
          property: userId
          generate: true
    
      - upstream: /sign-in
        method: POST
        use: downstream
        downstream: identity-service/sign-in
        auth: false
        responseHeaders:
          content-type: application/json

      - upstream: /refresh-tokens/use
        method: POST
        use: downstream
        downstream: identity-service/refresh-tokens/use
        auth: false
    
    services:
      identity-service:
        localUrl: localhost:5010
        url: identity-service

  locations:
    path: /locations
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: localisation-service/locations
        auth: true
        claims:
          role: admin
        onSuccess:
          data: response.data.items

      - upstream: /{locationId}
        method: GET
        use: downstream
        downstream: localisation-service/locations/{locationId}
        auth: true
        claims:
          role: admin

      - upstream: /
        method: POST
        use: downstream
        downstream: localisation-service/locations
        bind:
          - userId:@user_id
        auth: true
        resourceId:
          property: locationId
          generate: true

    services:
      localisation-service:
        localUrl: localhost:5011
        url: localisation-service

  routes:
    path: /routes
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: route-service/routes
        auth: false
  
      - upstream: /{routeId}
        method: GET
        use: downstream
        downstream: route-service/routes/{routeId}
        auth: false
  
      - upstream: /
        method: POST
        use: downstream
        downstream: route-service/routes
        bind:
          - userId:@user_id
        auth: true
        resourceId:
          property: routeId
          generate: true
          
      - upstream: /{routeId}/status/{status}
        method: PUT
        use: downstream
        downstream: route-service/routes/{routeId}/status/{status}
        bind:
          - routeId:{routeId}
          - status:{status}
        auth: true

    services:
      route-service:
        localUrl: localhost:5013
        url: route-service
        
  runs:
    path: /runs
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: run-service/runs
        auth: false

      - upstream: /{runId}
        method: GET
        use: downstream
        downstream: run-service/runs/{runId}
        auth: false

      - upstream: /
        method: POST
        use: downstream
        downstream: run-service/runs
        bind:
          - userId:@user_id
        auth: true
        resourceId:
          property: runId
          generate: true

    services:
      run-service:
        localUrl: localhost:5014
        url: run-service

  score:
    path: /scores
    routes:
      - upstream: /{userId}
        method: GET
        use: downstream
        downstream: score-service/scores/{userId}
        auth: false
        
      - upstream: /ranking/{userId}
        method: GET
        use: downstream
        downstream: score-service/scores/ranking/{userId}
        auth: false
          
      - upstream: /
        method: GET
        use: downstream
        downstream: score-service/scores
        auth: false

    services:
      score-service:
        localUrl: localhost:5015
        url: score-service
        
  achievement:
    path: /achievements
    routes:
      - upstream: /{userId}
        method: GET
        use: downstream
        downstream: achievement-service/achievements/{userId}
        bind:
          - userId:@user_id
        auth: false

    services:
      achievement-service:
        localUrl: localhost:5016
        url: achievement-service

  resource:
    path: /resources
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: resource-service/resources

      - upstream: /
        method: POST
        use: downstream
        downstream: resource-service/resources
        bind:
          - userId:@user_id
        auth: true

    services:
      resource-service:
        localUrl: localhost:5017
        url: resource-service
